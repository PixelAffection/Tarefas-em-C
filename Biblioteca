#include <stdio.h>
#include <string.h>
#include <conio.h>
#include <stdlib.h> /* Função exit*/
#include <ctype.h> /* Função toupper*/
#include <locale.h>

#define ARQ "Dados.Dat" /* Arquivo com os dados*/

#define OP_INSERIR '1'
#define OP_ALTERAR '2'
#define OP_APAGAR  '3'
#define OP_LISTAR '4'
#define OP_PESQUISAR '5'
#define OP_MAIS_ALUGADOS '6'

#define OP_SAIR '0'

#define OP_PESQ_ANO '1'
#define OP_PESQ_TITULO '2'



FILE *fp; /*Variável Global pois é útil ao longo do programa*/

typedef struct
{
	int Dia;
	int Mes;
	int Ano;
}DATA;
 
typedef struct
{
	char CodigoL[4+1];
	char StatusL;
	DATA DE; // Data de Empréstimo
	DATA DD; // Data de Devolução
}LIVRO;

typedef struct
{
	char Titulo[30+1];
	char Autores[100+1];
	char Assunto[30+1];
	char Editora[30+1];
	int Ano;
	int Edicao;
	int N_Exemplares; 
	int N_Emprestados;
	int Cont;
	char StatusO; 	/*		'*' indica que o registro será apagado		*/	
	LIVRO Exemplar[3];
}OBRA;

void Ler_Obra(OBRA *o)
{
	printf("Título	: ");gets(o->Titulo);
	printf("Autores	: ");gets(o->Autores);
	printf("Editora	: ");gets(o->Editora);
	printf("Ano	: ");scanf("%d",&o->Ano);
	printf("Edição	: ");scanf("%d",&o->Edicao);
	printf("Assunto	: ");gets(o->Assunto);
	printf("Quantidade de exemplares na biblioteca (0,1,2 ou 3)	: ");scanf("%d",&o->N_Exemplares);
	
	o->N_Emprestados=0;
	o->Cont=0;
	
	o->StatusO=' ';
	fflush(stdin);
}

void Mensagem(char *msg)
{
	printf(msg);
	getchar();
}
void Adicionar_Obra (OBRA o)
{
	fseek(fp,0L, SEEK_END);
	if(fwrite(&o,sizeof(o),1,fp)!=1)
		Mensagem("adicionar Pessoa: Falhou a escrita do registro");
}

void Inserir_Obra()
 {
 	OBRA o;
 	Ler_Obra(&o);
 	Adicionar_Obra(o);
 }
 
 
 /* Adiciona uma pessoa ao arquivo*/




void Mostrar_Obra(OBRA o)
{
	puts("\n\n");
	printf("Título:%s  \n\n",o.Titulo);
	printf("Autores:%s  \n\n",o.Autores);
	printf("Editora:%s  \n\n",o.Editora);
	printf("Ano:%d  \n\n",o.Ano);
	printf("Edição:%d  \n\n",o.Edicao);
	printf("Assunto:%s  \n\n",o.Assunto);
	printf("Quantidade de Exemplares existentes na biblioteca:%d  \n\n",o.N_Exemplares);
	printf("Quantidade de Exemplares Alugados:%d  \n\n",o.N_Emprestados);
	printf("Quantas vezes essa obra foi alugada:%d  \n\n",o.Cont);
}



void Inic()
{
	fp=fopen(ARQ,"r+b"); /*Tentar Abrir*/
	if(fp==NULL)
	{
		fp=fopen(ARQ,"w+b");
		if(fp==NULL)
		{
			fprintf(stderr,"ERRO FATAL: Impossível Criar Arquivo de Dados\n");
			exit(1);
		}
	}
}



void Listar()
 {
 	long int N_Linhas=0;
 	OBRA reg;
 	rewind(fp);
 	while(1)
 	{
 		if (fread(&reg,sizeof(reg),1,fp)!=1)break; /*Sair do Laço*/
 		
 		
 		if (reg.StatusO=='*')continue; /*Passa ao próximo registro*/
 		
 		Mostrar_Obra(reg);
 		
 			puts("\n\n\n\n");
 			
 		N_Linhas++;
 		
 		if(N_Linhas%20==0)
 		Mensagem("PESSIONE <ENTER> para continuar	.	.	. ");
	 }
	Mensagem("PESSIONE <ENTER> para continuar	.	.	. "); /*No fim da Listagem*/ 
 }
 


 void Alterar_Obra()
 {
 	OBRA x;
 	long int n_reg;
	printf("Qual o Nº do Registro: ");
	scanf("%ld", &n_reg);fflush(stdin);
	if(fseek(fp, (n_reg-1)*sizeof(OBRA),SEEK_SET)!=0)
		{
		Mensagem("Registro Inexistente ou Problemas no Posicionamento!!!");
		return;	
			
		}
	if(fread(&x,sizeof(OBRA),1,fp)!=1)
	{
		Mensagem("Problemas na leitura do Registro!!!");
		return;
	}
	if(x.StatusO=='*')
	{
		Mensagem("Um Registro Apagado não pode ser alterado!!!\n\n");
		return;
	}
		
	printf("\n\nDados Atuais\n\n");
	Mostrar_Obra(x);
	printf("\n\nNovos Dados\n\n");
	Ler_Obra(&x);
	
	//Recuar um Registro no Arquivo
	fseek(fp,-(long) sizeof(OBRA),SEEK_CUR);
	//Reescrever o Registro;
	fwrite(&x,sizeof(OBRA),1,fp);
	fflush(fp); /*Despejar os Dados no Disco Rígido*/	 
 }
 
 void Apagar_Obra()
 {
 	OBRA x;
 	long int n_reg;
 	char resp;
 	
 	printf("Qual o Nº do Registro:");
 	scanf("%ld", &n_reg);fflush(stdin);
 	
 	if(fseek(fp, (n_reg-1)*sizeof(OBRA),SEEK_SET)!=0)
		{
		Mensagem("Registro Inexistente ou Problemas no Posicionamento!!!");
		return;	
			
		}
	if(fread(&x,sizeof(OBRA),1,fp)!=1)
	{
		Mensagem("Problemas na leitura do Registro!!!");
		return;
	}
	if(x.StatusO=='*')
	{
		Mensagem("O registro já está apagado!!!\n\n");
		return;
	}
	
	printf("\n\nDados Atuais\n\n");
	Mostrar_Obra(x);
	
	printf("\n\nApagar o Registro (s/n)???: "); resp=getchar(); fflush(stdin);
	if (toupper(resp)!='S') return;
	
	x.StatusO='*';
		//Recuar um Registro no Arquivo
	fseek(fp,-(long) sizeof(OBRA),SEEK_CUR);
	//Reescrever o Registro;
	fwrite(&x,sizeof(OBRA),1,fp);
	fflush(fp); /*Despejar os Dados no Disco Rígido*/	
	
 }
 



void Pesquisar_Titulo(char *s)
 {

 	OBRA reg;
 	rewind(fp);
 	
 	while(fread(&reg,sizeof(OBRA),1,fp))
 	if(reg.StatusO!='*'&&strstr(reg.Titulo,s))
 		Mostrar_Obra(reg);
 		
 	Mensagem("PESSIONE <ENTER> para continuar	.	.	. "); /*No fim da Listagem*/	
 }

 void Pesquisar_Ano (int ini, int fim)
{
	OBRA reg;
	rewind(fp);
	
	while(fread(&reg,sizeof(OBRA),1,fp))
	if(reg.StatusO!='*' && reg.Ano>=ini && reg.Ano<=fim)
		Mostrar_Obra(reg);
	
	Mensagem("PESSIONE <ENTER> para continuar	.	.	. "); /*No fim da Listagem*/		
 } 


char *MainMenu[]={
	"1. Inserir Livro",
	"2. Alterar Livro",
	"3. Apagar Livro",
	"4. Listar Livros na biblioteca",
	"5. Pesquisas",
	"6. Listar livros mais alugados",
	"0. Sair",
	NULL	/* Acabaram as opções*/
};

char *PesqMenu[]={
	"1. Pesquisar por Intervalo  de Ano de Lançamento",
	"2. Pesquisar por Título",
	"0. Voltar",
	NULL	/* Acabaram as opções*/ 	
};

 char Menu(char *Opcoes[])
 {
 	int i;
 	char ch;
 	
 	while(1)
 	{  /*Cls*/
 		printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");//system("cls");
 		for(i=0;Opcoes[i]!=NULL; i++)
 		printf("\t\t%s\n\n",Opcoes[i]);
 		
 	printf("\n\n\tOpção: ");
 	ch=getchar(); fflush(stdin);
 	for(i=0; Opcoes[i]!=NULL; i++)
 	if(Opcoes[i][0]==ch)
 		return ch;
	 }
 }
 
 
 




int main()
 {
 	setlocale(LC_ALL, "Portuguese");
 	char Opcao;
 	Inic();
 	while((Opcao=Menu(MainMenu))!=OP_SAIR)
 		switch(Opcao)
 		{
 			
			case OP_INSERIR: Inserir_Obra();break;
 			case OP_ALTERAR: Alterar_Obra();break;
 			case OP_APAGAR:  Apagar_Obra(); break;
 			case OP_LISTAR:  Listar(); break;
 			// OP_MAIS_ALUGADOS: MaisAlugados(); break;
 			case OP_PESQUISAR:
 				while((Opcao=Menu(PesqMenu))!=OP_SAIR)
 				switch(Opcao)
 				{
 					case OP_PESQ_ANO:
 						{
 							int n1,n2;
 							printf("Qual o intervalo de anos de lançamento: ");
 							scanf("%d%d",&n1,&n2);fflush(stdin);
 							Pesquisar_Ano(n1,n2);
 							break; 
					 	}
					case OP_PESQ_TITULO:
						{
							char string[BUFSIZ+1];
							printf("Qual o título do livro a Procurar: ");
							gets(string);fflush(stdin);
							Pesquisar_Titulo(string);
						}
				 }
		 }
 }
